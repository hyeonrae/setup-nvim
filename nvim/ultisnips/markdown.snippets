priority -50

# global !p
# def create_table(snip):
#     # retrieving single line from current string and treat it like tabstops count
#     placeholders_string = snip.buffer[snip.line].strip()[2:].split("x",1)
#     rows_amount = int(placeholders_string[0])
#     columns_amount = int(placeholders_string[1])
# 
#     # erase current line
#     snip.buffer[snip.line] = ''
# 
#     # create anonymous snippet with expected content and number of tabstops
#     anon_snippet_title = ' | '.join(['$' + str(col) for col in range(1,columns_amount+1)]) + "\n"
#     anon_snippet_delimiter = ':-|' * (columns_amount-1) + ":-\n"
#     anon_snippet_body = ""
#     for row in range(1,rows_amount+1):
#         anon_snippet_body += ' | '.join(['$' + str(row*columns_amount+col) for col in range(1,columns_amount+1)]) + "\n"
#     anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body
# 
#     # expand anonymous snippet
#     snip.expand_anon(anon_snippet_table)
# endglobal
# 
# ###########################
# # Sections and Paragraphs #
# ###########################
# snippet sec "Section" b
# # ${1:Section Name} #
# $0
# endsnippet
# 
# snippet ssec "Sub Section" b
# ## ${1:Section Name} ##
# $0
# endsnippet
# 
# snippet sssec "SubSub Section" b
# ### ${1:Section Name} ###
# $0
# endsnippet
# 
# snippet par "Paragraph" b
# #### ${1:Paragraph Name} ####
# $0
# endsnippet
# 
# snippet spar "Paragraph" b
# ##### ${1:Paragraph Name} #####
# $0
# endsnippet

###################
# Text formatting #
###################
 
snippet * "italics"
*${1:${VISUAL}}*$0
endsnippet
 
snippet ** "bold"
**${1:${VISUAL}}**$0
endsnippet

snippet *** "bold italics"
***${1:${VISUAL}}***$0
endsnippet
 
 
################
# Common stuff #
################
snippet link "Link to something"
[${1:${VISUAL:Text}}](${3:http://${2:www.url.com}})$0
endsnippet

snippet img "Image"
![${1:pic alt}](${2:path}${3/.+/ "/}${3:opt title}${3/.+/"/})$0
endsnippet

# snippet ilc "Inline Code"
# \`$1\`$0
# endsnippet

snippet code "Codeblock" b
\`\`\`
$1
\`\`\`
$0
endsnippet

snippet ``` "Codeblock" b
\`\`\`${1:lang}
${2:code}
\`\`\`
$0
endsnippet

snippet ref "Reference Link" b 
[${1:${VISUAL:Text}}][${2:id}]$0
[$2]:${4:http://${3:www.url.com}} "${5:$4}"
endsnippet

# snippet fnt "Footnote"
# [^${1:${VISUAL:Footnote}}]$0
# 
# [^$1]:${2:Text}
# endsnippet
# 
# pre_expand "create_table(snip)"
# snippet "tb(\d+x\d+)" "Customizable table" br
# endsnippet
# 
# # vim:ft=snippets:

# template

snippet --- "input YARM Front Matter"
---
title: $1
date: `!v strftime("%Y-%m-%d")`
---
$0
endsnippet

snippet tsrs "Template of Software Requirements Specification"
# ${1:Software Requirements Specification}
---

Version ${2:version} 
${3:author}
${4:organization}
${5:date_created}
---

## 1. Introduction
### 1.1 Document Purpose
### 1.2 Product Scope
### 1.3 Definitions, Acronyms and Abbreviations
### 1.4 References
### 1.5 Overview
## 2. Overall Description
### 2.1 Product Perspective
### 2.2 Product Functions
### 2.3 Product Constraints
### 2.4 User Characteristics
### 2.5 Assumptions and Dependencies
### 2.6 Apportioning of Requirements
## 3. Requirements
### 3.1 External Interfaces
#### 3.1.1 User interfaces
#### 3.1.2 Hardware interfaces
#### 3.1.3 Software interfaces
### 3.2 Functional
### 3.3 Quality of Service
#### 3.3.1 Performance
#### 3.3.2 Security
#### 3.3.3 Reliability
#### 3.3.4 Availability
### 3.4 Compliance
### 3.5 Design and Implementation
#### 3.5.1 Installation
#### 3.5.2 Distribution
#### 3.5.3 Maintainability
#### 3.5.4 Reusability
#### 3.5.5 Portability
#### 3.5.6 Cost
#### 3.5.7 Deadline
#### 3.5.8 Proof of Concept
## 4. Verification
## 5. Appendixes
endsnippet
